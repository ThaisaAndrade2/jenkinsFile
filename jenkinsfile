pipeline {
    agent any

    environment {
        APP_TOKEN = 'meu_token_pessoal'
    }

    parameters {
        string(name: 'TESTE', defaultValue: 'qa', description: 'parametro para testes')
        choice(name: 'ENVIRONMENT', choices: ['dev', 'qa', 'staging', 'production'], description: 'ambientes para deploy')
    }

    options {
        timeout(time: 1, unit: 'HOURS')
    }

    triggers {
        //A cada 20 minutos ser√° executado
        cron "*/20 * * * *"
    }

    stages {
        stage ('Start') {
            steps {
                echo 'Starting the pipeline'
            }
        }

        parallel {
            stage ('Print the token'){
                steps {
                    echo APP_TOKEN
                }
            }

            stage ('Print parametro'){
                steps {
                    echo params.TESTE
                }
            }
        }

        stage ('Tests'){
            matrix {
                axes {
                    axis {
                        name 'Test_Type'
                        values 'Integration', 'End to End'
                    }
                }
                stages {
                    stage ('Run ${Test_Type} Tests') {
                        when {
                            expression {
                                params.ENVIRONMENT == 'qa'
                            }
                        }
                        steps {
                            echo "Executando os testes ${Test_Type} no ambiente de ${params.ENVIRONMENT}"
                        }
                    }
                }
            }
        }

        stage ('Deploy'){
            steps {
                input "Qual ambiente deseja deployar ${params.ENVIRONMENT}?"
                echo "O ambiente selecionado foi ${params.ENVIRONMENT}."
            }
        }
    }

    post {
        success {
            echo 'The pipeline is running successfully'
        }

        failure {
            echo 'Error in running the pipeline'
        }

        always {
            echo 'Finished the pipeline execution'
        }
    }
}
